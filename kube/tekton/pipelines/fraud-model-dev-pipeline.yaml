apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: fraud-model-dev-pipeline
spec:
  workspaces:
  - name: local-source
  params:
    - name: GIT_REPO
      type: string
      description: The repo to check output
      default: 'http://gogs:3000/gogs/seldon-core-launcher.git'
    - name: GIT_REVISION
      type: string
      description: The branch to be built
      default: 'master'
    - name: GIT_MESSAGE
      type: string
      description: The commit message of the triggered build (if any)
      default: "<none>"
    - name: PATH_CONTEXT
      type: string
      description: Where the code is relative to the start of the GIT_REPO
      default: "."
  resources:
  - name: app-image
    type: image
  tasks:
  - name: checkout
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: local-source
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_REVISION)
    - name: message
      value: $(params.GIT_MESSAGE)
    # by setting subdirectory parameters to ""
    # checkout will clone to the root of the local-source
    # volume, which will allow other tasks to find this directory
    # at their name for the mount point
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: submodules
      value: "false"
  - name: set-build-version
    taskRef:
      name: set-build-version
    runAfter:
      - checkout
    # retries necessary if we run in parallel with a workspace
    retries: 3
    workspaces:
    - name: source
      workspace: local-source
  - name: train-model
    taskRef:
      name: train-model
    runAfter:
      - checkout
    # retries necessary if we run in parallel with a workspace
    retries: 3
    workspaces:
    - name: source
      workspace: local-source
    params:
    - name: MODEL_NAME
      value: "train_iris.py"
    - name: CONTEXT
      value: $(params.PATH_CONTEXT)
  - name: build-image
    taskRef:
      name: workspace-s2i
    runAfter:
      - train-model
      - set-build-version
    params:
      - name: PATH_CONTEXT
        value: $(params.PATH_CONTEXT)
      - name: TLSVERIFY
        value: "false"
      - name: BUILDER_IMAGE_SCRIPTS_DIR
        value: /s2i/bin/
      - name: BUILDER_IMAGE
        # NOTE: This should have been imported already, see create-tekton-cicd.sh, "demo-cicd" will
        # be sed replaced in the demo creation script
 
        value: image-registry.openshift-image-registry.svc:5000/demo-cicd/seldon-builder
      - name: IMAGE_TAG
        value: $(tasks.set-build-version.results.build-number)
    resources:
      outputs:
      - name: image
        resource: app-image
    workspaces:
    - name: source
      workspace: local-source
  - name: deploy-model
    taskRef:
      name: seldon-model-deploy
    runAfter:
      - build-image
    params:
      - name: MODEL_DEPLOY
        value: 'TMPL_deployment.json'
      - name: PATH_CONTEXT
        value: $(params.PATH_CONTEXT)
      - name: PROJECT
        value: demo-dev
      - name: MODEL_IMAGE
        value: $(tasks.build-image.results.pushed-image-tag)
    workspaces:
    - name: source
      workspace: local-source
  - name: prompt-stage
    taskRef:
      name: prompt-slack
    runAfter:
      - deploy-model
    params:
    - name: webhook-secret
      value: slack-webhook-secret
    - name: message-payload-configmap
      value: slack-message-payload
    - name: callback-payload
      value: $(tasks.set-build-version.results.build-number)
   